#!/bin/bash
#
# Author: Lu Xu <oliver_lew at outlook at com>
# License: MIT License. 2020-2021 Lu Xu
#
# A shell script to parse Shadowsocks(R)/v2ray subscription links
# and generate json config files
#
# Requirements: base64, curl/wget (optional)

local_port=${LOCAL_PORT:-1080}
timeout=${TIMEOUT:-300}
CFGFILE=${CFGFILE:-ssr.json}
TMPFILE='/tmp/tmp_nodes.json'
decode_base64() {
	case "$((${#1} % 4))" in
		2) echo "$1==" ;;
		3) echo "$1=" ;;
		*) echo "$1" ;;
	esac | tr '_-' '/+' | grep -o "^[a-zA-Z0-9+/=]*" | base64 -d
}

decode_ss() {
	local t
	IFS=:@\  read -r method password server server_port <<- EOF
		${1%%/?*}
	EOF
	echo -n "."
	t="{\"server\": \"$server\", \"server_port\": $server_port, \"password\": \"$password\", \"local_address\": \"127.0.0.1\", \"local_port\": $local_port, \"timeout\": $timeout, \"method\": \"$method\"}"
	echo "$t" >>${TMPFILE}
}

decode_ssr() {
	local t
	IFS=:\  read -r server server_port protocol method obfs password <<- EOF
		${1%%/?*}
	EOF

	while IFS='=' read -r key value; do
		[ -n "$value" ] && eval "$key=\"$(decode_base64 "$value")\""
	done <<- EOF
		$(echo "${1#*/?}" | tr '&' '\n')
	EOF
	echo -n "."
	t="{\"remarks\":\"${remarks:-Null}\", \"server\": \"$server\", \"server_port\": $server_port, \"password\": \"$(decode_base64 "$password")\", \"local_address\": \"127.0.0.1\", \"local_port\": $local_port, \"timeout\": $timeout, \"method\": \"$method\", \"protocol\": \"$protocol\", \"protocol_param\": \"${protoparam:-null}\", \"obfs\": \"$obfs\", \"obfs_param\": \"${obfsparam:-null}\"}"
	echo "$t" >>${TMPFILE}
}

decode_vmess() {
	while IFS=': ' read -r key value; do
		[ -n "$value" ] && eval "$key=\"$value\""
	done <<- EOF
		$(echo "$1" | tr '{,}' '\n' | tr -d '"')
	EOF
	echo -n "."
	echo "$1" >>${TMPFILE}
}

decode_link() {
	info=$(decode_base64 "${1#*://}")
	case "${1%%:*}" in
		ss)     decode_ss "$info" ;;
		ssr)    decode_ssr "$info" ;;
		vmess)  decode_vmess "$info" ;;
		http|https) decode_link "$(curl -L --insecure -Ss "$1" || wget -qO - "$1")" ;;
		*)      for link in $info; do decode_link "$link"; done ;;
	esac
}
#####################################
rm -rf ${TMPFILE}
touch ${TMPFILE}

if [ "$#" = 1 ] && [ "$1" = "-h" ]; then
	echo "Usage: ssr-decode [ (http|https|ss|ssr|vmess):// | BASE64 | < input.txt ]"
elif [ "$#" = 0 ]; then
	while read -r link; do
		decode_link "$link"
	done
else
	for link in "$@"; do
		decode_link "$link"
	done
fi

[[ -s "${TMPFILE}" ]] && { sed -E '1s/^/\[/; $s/$/\]/; $!{s/$/,/g}' <${TMPFILE} >${CFGFILE}; echo -e "\n保存成功"; }
rm -rf ${TMPFILE}

exit 0
